package assignment2;

public class Vector {

	public static final Vector VEC_ZERO = new Vector(0, 0, 0);
	private final double x, y, z;

	public Vector(double x, double y, double z) {
		super();
		this.x = x;
		this.y = y;
		this.z = z;
	}
    
	// TODO: implement these vector functions!
	public double getX() {
		return 0.0;
	}

	public double getY() {
		return 0.0;
	}

	public double getZ() {
		return 0.0;
	}
	
	public Vector cross(Vector o) {
		return VEC_ZERO;
	}

	public double dot(Vector r) {
		return 0.0;
	}

	public Vector minus(Vector o) {
		return VEC_ZERO;
	}

	public Vector mul(Vector o) {
		return VEC_ZERO;
	}

	public double norm() {
		return 0.0;
	}

	public Vector normalize() {
		return VEC_ZERO;
	}

	public Vector plus(Vector r) {
		return VEC_ZERO;
	}

	public Vector smult(double f) {
		return VEC_ZERO;
	}
	

	// Some helper function to produce a color from a Vector
	// You don't have to change those!
	public Vector clamp(double min, double max) {
		return new Vector(clamp(x, min, max), clamp(z, min, max), clamp(z, min,
				max));
	}
	
	private static double clamp(double value, double min, double max) {
		double d = value;
		if (d < min) {
			d = min;
		} else if (d > max) {
			d = max;
		}
		return d;
	}
	
	public int toRGB() {
		return ((int) (Math.pow(clamp(x, 0, 1), 1 / 1) * 255. + .5) << 16)
				| ((int) (Math.pow(clamp(y, 0, 1), 1 / 1) * 255. + .5) << 8)
				| ((int) (Math.pow(clamp(z, 0, 1), 1 / 1) * 255. + .5));
	}

	@Override
	public String toString() {
		return "Vector [x=" + x + ", y=" + y + ", z=" + z + "]";
	}

}
